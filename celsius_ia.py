# -*- coding: utf-8 -*-
"""Celsius IA.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/11gHKXA0y_ZZQTfBt7-qtfMEwLCTTA6Bd

Utilizaremos las librerias TensorFlow y Numpy para poder entrenar la IA y representar graficamente los intentos realizados
"""

import tensorflow as tf
import numpy as np

"""Añadimos el data set con el que vamos a entrenar la IA, en este caso solo vamos a utilizar 7 datos con su correspondiente conversión, cuantos más datos aportemos mejor."""

celsius = np.array([-40, -10, 0 , 8, 15, 22, 38], dtype = float)
fahrenheit = np.array([-40, 14, 32, 46, 59, 72, 100], dtype=float)

capa = tf.keras.layers.Dense(units = 1, input_shape=[1])
modelo = tf.keras.Sequential([capa])

modelo.compile(
    optimizer = tf.keras.optimizers.Adam(0.1), 
    loss= 'mean_squared_error'
)

print("Comienza el entrenamiento...")
historial = modelo.fit(celsius, fahrenheit, epochs = 500, verbose=False)
print("Modelo entrenado!")

import matplotlib.pyplot as plt
plt.xlabel("# Intento")
plt.ylabel("Grado de pérdida")
plt.plot(historial.history["loss"])

print("Calculando prediccion...")
resultado = modelo.predict([100.0])
print("El resultado es "+ str(resultado)+ " fahrenheit")

print("Variables internas del modelo")
print(capa.get_weights())